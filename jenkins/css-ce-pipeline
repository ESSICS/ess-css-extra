#!groovyâ€‹
pipeline {
  /*
   * Environment sets up a map containing key : value pairs
   * The variables will be exported to the shell jenkins uses to execute in
   *
   */
  environment {
    sourceRepo = 'https://github.com/ControlSystemStudio'
    mvnXML = 'settings-for-jenkins-ce.xml'
    branch = 'master'
    artifactOrNot = credentials('secret')
    MAVEN_OPTS="-Xmx2048m -Xms1024M -Xss128M -XX:-UseGCOverheadLimit"
    email = 'claudio.rosati@esss.se'
    MVNOPT="-B -P ess-css-settings,platform-default,csstudio-composite-repo-enable,eclipse-sites"
  }
  /*
   * Agent sets up which environment that the pipeline will execute inside.
   * Can be specified to label of certain slave or spin up a docker container
   */
  agent {
    label 'css'
  }

  options {
    disableConcurrentBuilds() //Disallow concurrent executions of the Pipeline
    timeout(time:4, unit: 'HOURS') //Set a timeout period for the Pipeline run, after which Jenkins should abort the Pipeline
    timestamps()
    skipDefaultCheckout()
  }

  stages {
    stage('workspace-prep 00000, clean up'){
         steps{
           echo "sourceRepo = ${env.sourceRepo} \nmvnXML = ${env.mvnXML}"
           echo "branch = ${env.branch} \nemail = ${env.email}"
           echo "MVNOPT=${env.MVNOPT}  \nrunning on jenkinslave: ${env.NODE_NAME}"
           echo "path to workspace: ${env.WORKSPACE}"
           echo "${env.artifactOrNot}"
           sh "export"
           pwd()
           deleteDir() // rm -rf *
           //slackSend message: "Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)", token: 'AKrq2kTrwtgPrgnxe6OFC5Lu', channel: "random", teamDomain: "ess-ics"

         }

    }
    stage('clone css-extra 00100'){
       steps {
       //creates a new directory, {workspace}/<dirName>, everything inside this block will be run with the new folder as root
          dir("ess-css-extra"){
            git(url: 'https://github.com/fjubben/ess-css-extra', branch: 'jespertest') // checks out the repo in current folder (does not clone in to subfolder), specify branch
          }
       }
     }
     stage('maven-osgi-bundles 00200'){
         steps {
           dir("maven-osgi-bundles"){
              git(url: "${sourceRepo}/maven-osgi-bundles.git", branch: 'master')
              sh "mvn ${env.MVNOPT} --settings ../ess-css-extra/maven/${env.mvnXML} clean verify"
          }
        }
     }
     stage('CS-Studio CE 00300 - cs-studio-thirdparty'){
         steps{
           dir("cs-studio-thirdparty"){
              git(url: "${sourceRepo}/cs-studio-thirdparty.git", branch: 'master')
              sh "mvn ${env.MVNOPT} --settings ../ess-css-extra/maven/${env.mvnXML} clean verify"
            }
        }
     }
     stage('CS-Studio CE 00400 - diirt'){
        steps{
            dir("diirt"){
            git(url: "${sourceRepo}/diirt", branch: 'master')
            sh "mvn ${env.MVNOPT} --settings ../ess-css-extra/maven/${env.mvnXML} clean verify"
          }
        }
     }
     stage('CS-Studio CE 00500 - cs-studio'){
      steps{
          dir("cs-studio"){
            git(url: "${sourceRepo}/cs-studio", branch: 'master')
            dir("core"){
              sh "mvn ${env.MVNOPT} --settings ../../ess-css-extra/maven/${env.mvnXML} clean verify"
            }
            dir("applications"){
              sh "mvn ${env.MVNOPT} --settings ../../ess-css-extra/maven/${env.mvnXML} clean verify"
            }
          }
        }
     }

     stage('CS-Studio CE 00550 - org.csstudio.display.builder'){
        steps{
          dir("org.csstudio.display.builder"){
            git(url: 'https://github.com/kasemir/org.csstudio.display.builder.git', branch: 'master')
            sh "mvn ${env.MVNOPT} --settings ../ess-css-extra/maven/${env.mvnXML} -Dcss_repo=file:${env.WORKSPACE}/${env.buildPath}/ess-css-extra/ess_css_comp_repo clean verify"
          }
        }
     }
     stage('CS-Studio CE 00600 - org.csstudio.product'){
        steps{
          dir("org.csstudio.product"){
            git(url: "${sourceRepo}/org.csstudio.product.git", branch: 'master')
            sh "mvn ${env.MVNOPT} --settings ../ess-css-extra/maven/${env.mvnXML} clean verify"
          }
        }
     }
     stage('CS-Studio CE 00700 - org.csstudio.ess.product'){
        steps{
          dir("org.csstudio.ess.product"){
            git(url: "${sourceRepo}/org.csstudio.ess.product.git", branch: 'master')
            sh "mvn ${env.MVNOPT} --settings ../ess-css-extra/maven/${env.mvnXML} clean verify"
          }
        }
     }
  }
}
