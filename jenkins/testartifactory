pipeline {
  environment {
  serverID='artifactory-ess'
  artifactFolder='jespersfolder'
  buildSpace='css-ce'
  }
  agent {
    label 'css'
  }
  options{
  disableConcurrentBuilds() //Disallow concurrent executions of the Pipeline
  timeout(time:4, unit: 'HOURS') //Set a timeout period for the Pipeline run, after which Jenkins should abort the Pipeline
  timestamps()
  skipDefaultCheckout()
  }
  stages{
    stage('test artifact'){
      steps{
        dir("../${env.buildSpace}"){
          script { //artifactory plugin doesn't fully support declarative pipeline there for the scrip-block is needed
               def server = Artifactory.server "${env.serverID}"
               def versionNBR = sh script: """grep -oEm 1 -e '<version>(.*?)</version>' ${env.WORKSPACE}/../${env.buildSpace}/org.csstudio.ess.product/pom.xml | cut -d ">" -f2 | cut -d "<" -f1""".trim(), returnStdout: true

               def uploadSpec = """{
                 "files": [
                   {
                     "pattern": "org.csstudio.ess.product/repository/target/products/*.tar.gz",
                     "target": "CSSTest/${artifactFolder}/${versionNBR}/"
                   },
                   {
                     "pattern": "org.csstudio.ess.product/repository/target/products/*.zip",
                     "target": "CSSTest/${artifactFolder}/${versionNBR}/"
                   }
                 ]
               }"""
               server.upload(uploadSpec)
            }
          }
       }
    }
  }
}
